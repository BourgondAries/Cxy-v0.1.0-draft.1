#cxy start

    // Look for while
    push x
    cp x "while "
    find x

    // Store the pointer to the begin:
    push Whileptr
    mov Whileptr pointer

    // Put newline and space in registers
    push y
    cp y " "
    push z
    cp z "
"

    // Check for the boolean target
    :loop
        next
        eq next y
        if eq
        begin
            goto out
        end
        eq next z
        if eq
        begin
            goto out
        end
    goto loop
    :out

    // Move the pointer to the boolean target's start
    push tmp
    cp tmp "6"
    add pointer tmp
    pop tmp

    capt
    show capt

    // Select a space sized 5:
    mov pointer marker
    push t
    cp t "5"
    add marker t

    // Scroll until we find the first begin
    push begin
    cp begin begin
    :loopb
        inc marker
        inc pointer
        capt
        eq begin capt
        if eq
        begin
            show capt
            goto outb
        end
    goto loopb
    :outb


    // Select a space sized 3:
    mov pointer marker
    push t
    cp t "3"
    add marker t

    // Scroll until we find the first end
    push end
    cp end end
    :loopa
        inc marker
        inc pointer
        capt
        eq end capt
        if eq
        begin
            show capt
            goto outa
        end
    goto loopa
    :outa

#cxy stop












